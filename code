import pandas as pd
import numpy as np
from datetime import datetime, timedelta
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
import matplotlib.pyplot as plt

# Load the sample dataset
data = pd.read_csv('sample_data.csv')

# Extract features and target variable
features = ['Year']
target_variable = 'PreviousDumpVolumes'

# Prepare the data
X = data[features].values.reshape(-1, 1)
y = data[target_variable]

# Split the data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Train a linear regression model
model = LinearRegression()
model.fit(X_train, y_train)

# Make predictions for future years
future_years = np.arange(data['Year'].max() + 1, data['Year'].max() + 6).reshape(-1, 1)
future_predictions = model.predict(future_years)

# Plotting the graph
plt.figure(figsize=(10, 6))

# Plot actual dump volumes
plt.scatter(data['Year'], data['PreviousDumpVolumes'], color='black', label='Actual Dump Volumes')

# Plot predicted dump volumes for training set
train_predictions = model.predict(X_train)
plt.scatter(X_train, train_predictions, color='blue', alpha=0.5, label='Predicted Dump Volumes (Training Set)')

# Plot predicted dump volumes for future years
plt.plot(future_years, future_predictions, color='green', linestyle='dashed', linewidth=2, label='Predicted Dump Volumes (Future Years)')

plt.title('Dump Volume Prediction Over Time')
plt.xlabel('Year')
plt.ylabel('Dump Volume')
plt.legend()
plt.show()
